// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.1 effective-5.10 (swiftlang-6.1.0.110.21 clang-1700.0.13.3)
// swift-module-flags: -target arm64-apple-ios18.2 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-experimental-feature DebugDescriptionMacro -enable-bare-slash-regex -module-name LuckyBiteiOS
// swift-module-flags-ignorable: -no-verify-emitted-module-interface -interface-compiler-version 6.1
import Foundation
@_exported import LuckyBiteiOS
import SafariServices
import Swift
import SwiftUI
import UIKit
import WebKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objcMembers public class FloatingButtonManager : ObjectiveC.NSObject {
  @objc public static let shared: LuckyBiteiOS.FloatingButtonManager
  @objc public func showFloatingButton(on viewController: UIKit.UIViewController)
  @objc public func hideFloatingButton()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class LuckyBiteSDK : ObjectiveC.NSObject {
  @objc public static let shared: LuckyBiteiOS.LuckyBiteSDK
  @objc override dynamic public init()
  @objc public func setFloatingButton(viewController: UIKit.UIViewController, show: Swift.Bool)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objcMembers final public class LuckyBiteSDKAdManager : ObjectiveC.NSObject {
  @objc public static let shared: LuckyBiteiOS.LuckyBiteSDKAdManager
  final public func initialize(bidmadCommon: (any LuckyBiteiOS.BidmadCommonProtocol)?, completion: @escaping (Swift.Bool) -> Swift.Void)
  @objc deinit
}
public protocol BidmadCommonProtocol {
  func initializeSdk(completion: @escaping (Swift.Bool) -> Swift.Void)
}
@_Concurrency.MainActor @preconcurrency public struct LuckyBiteFloatingButton : SwiftUI.UIViewControllerRepresentable {
  @_Concurrency.MainActor @preconcurrency public init()
  @_Concurrency.MainActor @preconcurrency public func makeUIViewController(context: LuckyBiteiOS.LuckyBiteFloatingButton.Context) -> UIKit.UIViewController
  @_Concurrency.MainActor @preconcurrency public func updateUIViewController(_ uiViewController: UIKit.UIViewController, context: LuckyBiteiOS.LuckyBiteFloatingButton.Context)
  @_Concurrency.MainActor @preconcurrency public static func dismantleUIViewController(_ uiViewController: UIKit.UIViewController, coordinator: ())
  public typealias Body = Swift.Never
  public typealias Coordinator = ()
  public typealias UIViewControllerType = UIKit.UIViewController
}
extension LuckyBiteiOS.LuckyBiteFloatingButton : Swift.Sendable {}
