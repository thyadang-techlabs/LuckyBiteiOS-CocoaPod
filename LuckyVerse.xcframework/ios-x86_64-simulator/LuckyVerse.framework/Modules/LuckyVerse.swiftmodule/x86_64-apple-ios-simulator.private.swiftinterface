// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.1.2 effective-5.10 (swiftlang-6.1.2.1.2 clang-1700.0.13.5)
// swift-module-flags: -target x86_64-apple-ios13.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-experimental-feature DebugDescriptionMacro -enable-bare-slash-regex -module-name LuckyVerse
// swift-module-flags-ignorable: -no-verify-emitted-module-interface -interface-compiler-version 6.1.2
import Foundation
@_exported import LuckyVerse
import OpenBiddingHelper
import SafariServices
import Swift
import SwiftUI
import UIKit
import WebKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@_Concurrency.MainActor @preconcurrency public struct LuckyVerseFloatingButton : SwiftUI.UIViewControllerRepresentable {
  @_Concurrency.MainActor @preconcurrency public init()
  @_Concurrency.MainActor @preconcurrency public func makeUIViewController(context: LuckyVerse.LuckyVerseFloatingButton.Context) -> UIKit.UIViewController
  @_Concurrency.MainActor @preconcurrency public func updateUIViewController(_ uiViewController: UIKit.UIViewController, context: LuckyVerse.LuckyVerseFloatingButton.Context)
  @_Concurrency.MainActor @preconcurrency public static func dismantleUIViewController(_ uiViewController: UIKit.UIViewController, coordinator: ())
  public typealias Body = Swift.Never
  public typealias Coordinator = ()
  public typealias UIViewControllerType = UIKit.UIViewController
}
@objc @_inheritsConvenienceInitializers @objcMembers public class FloatingButtonManager : ObjectiveC.NSObject {
  @objc public static let shared: LuckyVerse.FloatingButtonManager
  @objc public func showFloatingButton(on viewController: UIKit.UIViewController)
  @objc public func hideFloatingButton()
  @objc override dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objcMembers public class LuckyVerseSDK : ObjectiveC.NSObject {
  @objc public static let shared: LuckyVerse.LuckyVerseSDK
  @objc public func setFloatingButton(viewController: UIKit.UIViewController, show: Swift.Bool)
  @objc public func setRewardAdZoneIdForSaju(_ zoneId: Swift.String)
  @objc public func setRewardAdZoneIdForNotSaju(_ zoneId: Swift.String)
  @objc public func setRewardAdZoneIdForFortuneCookie(_ zoneId: Swift.String)
  @objc public func setBannerAdZoneIdForSaju(_ zoneId: Swift.String)
  @objc public func setBannerAdZoneIdForNotSaju(_ zoneId: Swift.String)
  @objc public func setBannerAdZoneIdForFortuneCookie(_ zoneId: Swift.String)
  @objc public static var sdkVersion: Swift.String
  @objc deinit
  @objc public func initialize()
  @objc public func updateUSER_ID(userId: Swift.String)
  @objc public func updateIDFA(IDFA: Swift.String)
  @objc public func updateAPP_KEY(APP_KEY: Swift.String)
  @objc public func setGoToSettingObjc(_ callback: @escaping @convention(block) () -> Swift.Void)
  @objc public func setGoToSettingSwift(_ callback: @escaping () -> Swift.Void)
  @objc public func openLuckyVerseMain()
  @objc public func openLuckyVerseByPush(pushKey: Swift.String)
  @objc public func openLuckyVerseMyPage()
  @objc public func openLuckyVerseSajuInfo()
  @objc public func openLuckyVersePhoneAuth()
  @objc public func openLuckyVersePointHistory()
  @objc public func openLuckyVerseProductHistory()
  @objc public func openLuckyVerseProductHistoryDetail(id: Swift.String)
  @objc public func openLuckyVerseFaq()
  @objc public func openLuckyVerseFaqDetail(id: Swift.String)
  @objc public func openLuckyVerseInquiry()
  @objc public func openLuckyVerseInquiryHistory()
  @objc public func openLuckyVerseInquiryHistoryDetail(id: Swift.String)
  @objc public func openLuckyVerseTermsAndPolicies()
  @objc public func openLuckyVerseTermsAndPoliciesDetail(id: Swift.String)
  @objc public func openLuckyVerseProductStore()
  @objc public func openLuckyVerseProductStoreDetail()
  @objc public func openLuckyVerseError()
  @objc public func setLuckyVerseLocalPush(push: LuckyVerse.LuckyVerseLocalPush)
  @objc public func cancelLuckyVerseLocalPush(pushType: LuckyVerse.LuckyVerseLocalPushType)
}
@objc @_inheritsConvenienceInitializers @objcMembers public class LuckyVerseLocalPush : ObjectiveC.NSObject {
  @objc override dynamic public init()
  @objc public init(title: Swift.String, body: Swift.String, type: LuckyVerse.LuckyVerseLocalPushType, repeats: Swift.Bool = false, sound: UserNotifications.UNNotificationSound = .default, interverInSeconds: Swift.Int = 5)
  @objc deinit
}
@objc(LuckyVerseLocalPushType) public enum LuckyVerseLocalPushType : Swift.Int {
  case MAIN = 876663
  case MY = 876664
  case SAJU_INFO = 876665
  case PHONE_AUTH = 876666
  case POINT_HISTORY = 876667
  case PRODUCT_HISTORY = 876668
  case PRODUCT_HISTORY_DETAIL = 876669
  case FAQ = 876670
  case FAQ_DETAIL = 876671
  case INQUIRY = 876672
  case INQUIRY_HISTORY = 876673
  case INQUIRY_HISTORY_DETAIL = 876674
  case TERMS_AND_POLICIES = 876675
  case TERMS_AND_POLICIES_DETAIL = 876676
  case PRODUCT_STORE = 876677
  case PRODUCT_STORE_DETAIL = 876678
  case ERROR = 876679
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
extension Swift.UInt64 {
  public static func nanoSeconds(from seconds: Swift.Int) -> Swift.UInt64
}
extension LuckyVerse.LuckyVerseFloatingButton : Swift.Sendable {}
extension LuckyVerse.LuckyVerseLocalPushType : Swift.Equatable {}
extension LuckyVerse.LuckyVerseLocalPushType : Swift.Hashable {}
extension LuckyVerse.LuckyVerseLocalPushType : Swift.RawRepresentable {}
